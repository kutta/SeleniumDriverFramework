/*
 * This class is used to add a product in OCM Application
 * 
 */
/**
 *
 * @author sanjaya
 */
package com.company.css.OCM;

import java.text.SimpleDateFormat;
import java.util.Date;

import jxl.Cell;
import jxl.Sheet;

import com.thoughtworks.selenium.SeleneseTestCase;
import com.thoughtworks.selenium.Selenium;

public class OCMComponent extends SeleneseTestCase {

    private Selenium callerSelenium;

    public OCMComponent(Selenium selenium) {
        this.callerSelenium = selenium;
    }

    public void addProductCatalog(String productCode, String productName, String productDescription) throws Exception {

        System.out.println("Enter to addProductCatalog1 ");
        /* callerSelenium.open("/nmy-ocm-app/faces/catalog/product_by_catalog.jsp");
        callerSelenium.click("mainPanel:treeForm:catalog-tree:0:t2");
        callerSelenium.click("mainPanel:treeForm:catalog-tree:0:0:_idJsp18_link");*/
        callerSelenium.waitForPageToLoad("30000");
        callerSelenium.click("link=Create New Catalog");
        callerSelenium.waitForPageToLoad("30000");

        callerSelenium.type("mainPanel:edit:fields:code", productCode);
        //System.out.println("Enter to addProductCatalog "+productCode+" "+productName+" "+productDescription);
        callerSelenium.type("mainPanel:edit:fields:name", productName);
        callerSelenium.type("mainPanel:edit:fields:description", productDescription);
        callerSelenium.click("mainPanel:edit:buttons:createProductCategory");
        callerSelenium.waitForPageToLoad("30000");

    }

    public void addCompatibleDeviceDetailsWithPO(String compatibleDevicePO) throws Exception {

        System.out.println("Entering to addCompatibleDeviceDetailsWithPrimaryOffers2");
        callerSelenium.open("/nmy-ocm-app/faces/catalog/product_by_catalog.jsp");
        //Wait.forTextPresent("Browse Products by Catalog");
        callerSelenium.click("mainPanel:treeForm:catalog-tree:0:t2");
        callerSelenium.click("mainPanel:treeForm:catalog-tree:0:1:t2");

        callerSelenium.click("mainPanel:treeForm:catalog-tree:0:1:_idJsp18_link");
        callerSelenium.waitForPageToLoad("30000");
        callerSelenium.click("//a[contains(text(),'Postpaid GSM Mobile')]");

        //selenium.click("mainPanel:treeForm:catalog-tree:0:1:11:_idJsp19_link");
        callerSelenium.waitForPageToLoad("30000");
        callerSelenium.click("mainPanel:boxForm:actionBox:actionList:entityRelations:goToProductTypeRelationShip");
        callerSelenium.waitForPageToLoad("30000");
        callerSelenium.click("mainPanel:boxForm:actionBox:actionList:entityType2relation:defineCategoryToProductTypeRelationShip");
        callerSelenium.waitForPageToLoad("30000");
        callerSelenium.select("mainPanel:ruleKindForm:RuleKind", compatibleDevicePO);
        callerSelenium.waitForPageToLoad("30000");

        // callerSelenium.check("//input[@id='mainPanel:productForm:productTypeList:" + Navigation.selectFirstIDs("VOICE_DEVICE") + ":attach']");
        //callerSelenium.check("//input[@id='mainPanel:productForm:productTypeList:" + Navigation.selectFirstIDs("DATA_DEVICE") + ":attach']");

        //callerSelenium.click("mainPanel:productForm:productTypeList:buttons:modifyList");
        // callerSelenium.waitForPageToLoad("30000");
    }

    public boolean createNewAccescoryProduct(Sheet workSheet, int rowCount) throws Exception {

        boolean abortFlag = false;

        Cell codeCell = workSheet.getCell(1, rowCount);
        String accessoryCode = codeCell.getContents();

        Cell nameCell = workSheet.getCell(2, rowCount);
        String accessoryName = nameCell.getContents();

        Cell descCell = workSheet.getCell(3, rowCount);
        String accessoryDesc = descCell.getContents();

        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("id=mainPanel:edit:fields:name", accessoryName);
        callerSelenium.type("id=mainPanel:edit:fields:code", accessoryCode);
        callerSelenium.type("id=mainPanel:edit:fields:shortDesc", accessoryDesc);
        callerSelenium.type("id=mainPanel:edit:fields:description", accessoryDesc);
        callerSelenium.click("id=mainPanel:edit:buttons:createProduct");

        callerSelenium.waitForPageToLoad("60000");

        if (callerSelenium.isTextPresent("Product code must be unique.")) {
            abortFlag = true;
            System.out.println("Accessory code " + accessoryCode + " already exists");

        }

        return abortFlag;
    }

    public void editProductAttributes(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        Cell smallImagePathCell = workSheet.getCell(4, rowCount);
        String smallImagePath = smallImagePathCell.getContents();

        Cell largeImagePathCell = workSheet.getCell(5, rowCount);
        String largeImagePath = largeImagePathCell.getContents();

        Cell manufacturerCell = workSheet.getCell(7, rowCount);
        String manufacturer = manufacturerCell.getContents();

        Cell warehouseCell = workSheet.getCell(9, rowCount);
        String warehouse = warehouseCell.getContents();

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("SMALL_IMAGE_PATH") + ":contentRef", smallImagePath);

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("LARGE_IMAGE_PATH") + ":contentRef", largeImagePath);

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("SMALL_IMAGE_PATH") + ":simpleDisclaimer",
                            smallImagePath);
        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("LARGE_IMAGE_PATH") + ":simpleDisclaimer",
                            largeImagePath);

        callerSelenium.select("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("MANUFACTURERS") + ":selectOne", manufacturer);

        /* @TODO following needs to be fixed, if not recognised. Tests not using so not urgent
        if (genuine.equals("true")) {
        callerSelenium.click("name=mainPanel:productForm:attributeList:6__5af:boolean");
        } else {
        callerSelenium.click("xpath=(//input[@name='mainPanel:productForm:attributeList:6__5af:boolean'])[2]");
        }*/

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("WAREHOUSE_NUMBER") + ":longString", warehouse);
        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("TERMS_AND_CONDITIONS") + ":longString",
                            "CSS_PQA Terms And Conditions");

        callerSelenium.click("mainPanel:productForm:b_updateAttributes");
        callerSelenium.waitForPageToLoad("60000");

        assertTrue(callerSelenium.isTextPresent("Attribute values updated."));

    }

    public void editAccessoryPriceLists(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        Date date = new Date();
        SimpleDateFormat myformat = new SimpleDateFormat("MM/dd/yy");
        System.out.println(myformat.format(date));

        Cell priceUSDCell = workSheet.getCell(10, rowCount);
        String priceUSD = priceUSDCell.getContents();

        Cell priceEURCell = workSheet.getCell(11, rowCount);
        String priceEUR = priceEURCell.getContents();

        //  Cell manufacturerCell = workSheet.getCell(7, rowCount);
        //  String manufacturer = manufacturerCell.getContents();

        callerSelenium.click("mainPanel:productForm:productDetailsTabbedPane.7");
        callerSelenium.waitForPageToLoad("60000");
        navigateTo.SelectUSDCurrency();
        callerSelenium.click("mainPanel:productForm:priceTab:view_product_prices:defaultPricesList:0:editDefaultPrices");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("mainPanel:productForm:priceList:0:price", priceUSD);
        callerSelenium.type("mainPanel:productForm:priceList:0:startDate", myformat.format(date));
        callerSelenium.click("mainPanel:productForm:priceList:buttons:modifyPriceList");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:priceList:buttons:cancel");
        callerSelenium.waitForPageToLoad("60000");

        navigateTo.SelectEURCurrency();
        callerSelenium.click("mainPanel:productForm:priceTab:view_product_prices:defaultPricesList:0:editDefaultPrices");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("mainPanel:productForm:priceList:0:price", priceEUR);
        callerSelenium.type("mainPanel:productForm:priceList:0:startDate", myformat.format(date));
        callerSelenium.click("mainPanel:productForm:priceList:buttons:modifyPriceList");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:priceList:buttons:cancel");
        callerSelenium.waitForPageToLoad("60000");
    }

    public void editAccessoryCategories(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        callerSelenium.click("mainPanel:productForm:productDetailsTabbedPane.9");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:categoryTab:view_product_availability_in_categories:editListAvailabilityCategory");
        callerSelenium.waitForPageToLoad("60000");

        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("CSS_PQA_Catalog") + ":attach");
        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("DS_DATA_ACCESSORIES_PC") + ":attach");
        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("DS_PHONE_ACCESSORIES_PC") + ":attach");

        callerSelenium.click("mainPanel:productForm:categoryList:buttons:modifyList");
        callerSelenium.waitForPageToLoad("60000");
    }

    public void selectPublishMasterCatalogCurrentWorkingSet() throws Exception {

        callerSelenium.check("xpath=(//input[@name='mainPanel:edit:fields:CatalogPublication'])[2]");

    }

    public void selectPublishMediaFilesCurrentWorkingSet() throws Exception {

        callerSelenium.check("xpath=(//input[@name='mainPanel:edit:fields:ContentPublication'])[2]");
    }

    public boolean createNewDeviceProduct(Sheet workSheet, int rowCount) throws Exception {

        boolean abortFlag = false;

        Cell codeCell = workSheet.getCell(1, rowCount);
        String deviceCode = codeCell.getContents();

        Cell nameCell = workSheet.getCell(2, rowCount);
        String deviceName = nameCell.getContents();

        Cell descCell = workSheet.getCell(3, rowCount);
        String deviceDesc = descCell.getContents();

        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("id=mainPanel:edit:fields:name", deviceName);
        callerSelenium.type("id=mainPanel:edit:fields:code", deviceCode);
        callerSelenium.type("id=mainPanel:edit:fields:shortDesc", deviceDesc);
        callerSelenium.type("id=mainPanel:edit:fields:description", deviceDesc);
        callerSelenium.click("id=mainPanel:edit:buttons:createProduct");

        callerSelenium.waitForPageToLoad("60000");

        if (callerSelenium.isTextPresent("Product code must be unique.")) {
            abortFlag = true;
            System.out.println("Device code " + deviceCode + " already exists");

        }

        return abortFlag;
    }

    public void editDeviceProductAttributes(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        Cell smallImagePathCell = workSheet.getCell(4, rowCount);
        String smallImagePath = smallImagePathCell.getContents();

        Cell largeImagePathCell = workSheet.getCell(5, rowCount);
        String largeImagePath = largeImagePathCell.getContents();

        Cell manufacturerCell = workSheet.getCell(7, rowCount);
        String manufacturer = manufacturerCell.getContents();

        Cell warehouseCell = workSheet.getCell(8, rowCount);
        String warehouse = warehouseCell.getContents();

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("SMALL_IMAGE_PATH") + ":contentRef", smallImagePath);

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("LARGE_IMAGE_PATH") + ":contentRef", largeImagePath);

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("SMALL_IMAGE_PATH") + ":simpleDisclaimer",
                            smallImagePath);
        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("LARGE_IMAGE_PATH") + ":simpleDisclaimer",
                            largeImagePath);

        callerSelenium.select("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("MANUFACTURERS") + ":selectOne", manufacturer);

        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("WAREHOUSE_NUMBER") + ":longString", warehouse);
        callerSelenium.type("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("TERMS_AND_CONDITIONS") + ":longString",
                            "CSS_PQA Terms And Conditions");
        callerSelenium.check("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("Cable") + ":choiceMany:"
                             + navigateTo.selectSecondIDs("Cable") + ":selected");
        callerSelenium.check("mainPanel:productForm:attributeList:" + navigateTo.selectFirstIDs("GSM Mobile") + ":choiceMany:"
                             + navigateTo.selectSecondIDs("GSM Mobile") + ":selected");

        callerSelenium.click("mainPanel:productForm:b_updateAttributes");
        callerSelenium.waitForPageToLoad("60000");

        assertTrue(callerSelenium.isTextPresent("Attribute values updated."));

    }

    public void editDevicePriceLists(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        Date date = new Date();
        SimpleDateFormat myformat = new SimpleDateFormat("MM/dd/yy");
        System.out.println(myformat.format(date));

        Cell priceUSDCell = workSheet.getCell(9, rowCount);
        String priceUSD = priceUSDCell.getContents();

        Cell priceEURCell = workSheet.getCell(10, rowCount);
        String priceEUR = priceEURCell.getContents();

        callerSelenium.click("mainPanel:productForm:productDetailsTabbedPane.7");
        callerSelenium.waitForPageToLoad("60000");
        navigateTo.SelectUSDCurrency();
        callerSelenium.click("mainPanel:productForm:priceTab:view_product_prices:defaultPricesList:0:editDefaultPrices");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("mainPanel:productForm:priceList:0:price", priceUSD);
        callerSelenium.type("mainPanel:productForm:priceList:0:startDate", myformat.format(date));
        callerSelenium.click("mainPanel:productForm:priceList:buttons:modifyPriceList");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:priceList:buttons:cancel");
        callerSelenium.waitForPageToLoad("60000");

        navigateTo.SelectEURCurrency();
        callerSelenium.click("mainPanel:productForm:priceTab:view_product_prices:defaultPricesList:0:editDefaultPrices");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.type("mainPanel:productForm:priceList:0:price", priceEUR);
        callerSelenium.type("mainPanel:productForm:priceList:0:startDate", myformat.format(date));
        callerSelenium.click("mainPanel:productForm:priceList:buttons:modifyPriceList");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:priceList:buttons:cancel");
        callerSelenium.waitForPageToLoad("60000");
    }

    public void editVoiceDeviceCategories(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        callerSelenium.click("mainPanel:productForm:productDetailsTabbedPane.9");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:categoryTab:view_product_availability_in_categories:editListAvailabilityCategory");
        callerSelenium.waitForPageToLoad("60000");

        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("CSS_PQA_Catalog") + ":attach");
        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("DS_VOICE_DEVICES_PC") + ":attach");

        callerSelenium.click("mainPanel:productForm:categoryList:buttons:modifyList");
        callerSelenium.waitForPageToLoad("60000");
    }

    public void editDataDeviceCategories(Sheet workSheet, int rowCount) throws Exception {
        Navigation navigateTo = new Navigation(callerSelenium);

        callerSelenium.click("mainPanel:productForm:productDetailsTabbedPane.9");
        callerSelenium.waitForPageToLoad("60000");
        callerSelenium.click("mainPanel:productForm:categoryTab:view_product_availability_in_categories:editListAvailabilityCategory");
        callerSelenium.waitForPageToLoad("60000");

        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("CSS_PQA_Catalog") + ":attach");
        callerSelenium.check("mainPanel:productForm:categoryList:" + navigateTo.selectFirstIDs("DS_DATA_DEVICES_PC") + ":attach");

        callerSelenium.click("mainPanel:productForm:categoryList:buttons:modifyList");
        callerSelenium.waitForPageToLoad("60000");
    }

}
