package com.comverse.upm.common;

/**
 * 
 * @author osmolya
 */



import org.junit.Test;

import com.thoughtworks.selenium.Selenium;
import com.comverse.upm.upmPages.*;




//import java.util.Properties;






//import com.comverse.upm.upmPages.Process;


public class UpmUtils extends UPMSeleneseTestCase {
	
    public static final String PROP_FILE = "init.properties";
    public static String cust_ip = null;
    
    private Selenium callerSelenium;
 //   private String DefaultTimeout = "100000";
    private String DefaultTaskMode = "Production";

    public UpmUtils(Selenium selenium) {
        this.callerSelenium = selenium;
    }
    
  
    
	public void UpmCheckWhetherLoggedInAndLogIn() throws Exception {
		
	//	UpmWait waiting = new UpmWait(callerSelenium);
		Boolean loggedIn = callerSelenium.isTextPresent("Alarm Summary");
		System.out.println(loggedIn);
				
		if (!(loggedIn))
		{
        Login login = new Login(callerSelenium);
        login.typeLoginCredentials("secadmin","passw0rd");      
		}		
	}

	@Test
	//Default Production task mode template
	public void upm_create_template(String templateName, String moduleName, String nodeType, String serverId) throws Exception {
		ProcessPage processPage = new ProcessPage(callerSelenium);
		
		processPage.clickCreateNewTemplate();
        processPage.typeTemplateName(templateName);	
        processPage.typeModuleName(moduleName);   
		processPage.selectNodeType(nodeType);	
		processPage.selectMode(DefaultTaskMode);		
		processPage.selectServerId(serverId);	
		processPage.saveTemplate();		
			}

	public void upm_create_cross_node_template(String templateName, String moduleName, String nodeType, String serverId) throws Exception {
		ProcessPage processPage = new ProcessPage(callerSelenium);
		
		processPage.clickCreateNewTemplate();
        processPage.typeTemplateName(templateName);	
        processPage.typeModuleName(moduleName);   
		processPage.selectNodeType(nodeType);	
		processPage.selectMultiInstanceCheckbox();
		processPage.addRcsBatchWkf();	
		processPage.saveTemplate();		
			}
	
	//	@Test
	// overloading method to create template with Task Mode passed as a parameter
		public void upm_create_template(String templateName, String moduleName, String nodeType, String serverId, String taskMode) throws Exception {
			ProcessPage processPage = new ProcessPage(callerSelenium);
			
			processPage.clickCreateNewTemplate();
	        processPage.typeTemplateName(templateName);	
	        processPage.typeModuleName(moduleName);   
			processPage.selectNodeType(nodeType);	
			processPage.selectMode(taskMode);		
			processPage.selectServerId(serverId);	
			processPage.saveTemplate();	
		}

		// overloading method to create template with Task Name and Task Mode passed as a parameter
		public void upm_create_template(String templateName, String moduleName, String nodeType, String serverId, String taskMode, String taskName) throws Exception {
			ProcessPage processPage = new ProcessPage(callerSelenium);
			
			processPage.clickCreateNewTemplate();
	        processPage.typeTemplateName(templateName);	
	        processPage.typeModuleName(moduleName);   
			processPage.selectNodeType(nodeType);
			processPage.selectTaskName(taskName);
			processPage.selectMode(taskMode);		
			processPage.selectServerId(serverId);	
			processPage.saveTemplate();	
		}
		
		//method for running Workflow template for Igen, BIP for a specific AccountNo
		public void runTemplate(String templateName, String accountNo) throws Exception
		{
		ProcessPage processPage = new ProcessPage(callerSelenium);		
		processPage.selectTemplate(templateName);		
		processPage.useAccountNumberQuery(accountNo);
		processPage.runTemplate();

		}
	
		/* runCrossNodeTemplate NEEDS TO BE ENHANCED TO ACCEPT AN ACCOUNT NUMBER
		 * SUGGEST SUBMITTING PR REQUEST TO HAVE ACCOUNT NUMBER QUERY AVAIL
		 * IN CROSS-NODE WORKFLOW
		 * */
		 
		public void runCrossNodeTemplate() throws Exception
		{
		ProcessPage processPage = new ProcessPage(callerSelenium);		
		processPage.selectTemplate("CBS Cross Node");		
		processPage.runTemplate();

		}
		
		//method for running Workflow template for Igen, BIP for a specific AccountNo
				public void runPaymentTemplate(String templateName, String taskName) throws Exception
				{
				ProcessPage processPage = new ProcessPage(callerSelenium);		
				processPage.selectTemplate(templateName);		
				processPage.selectTaskName(taskName);
				processPage.runTemplate();

				}
		
		//Overloading runTemplate method for running Workflow with no Query parameter
		public void runTemplate(String templateName) throws Exception
		{
		ProcessPage processPage = new ProcessPage(callerSelenium);		
		processPage.selectTemplate(templateName);		
		processPage.runTemplate();		
		}
				
		public Boolean checkTemplate(String templateName) throws InterruptedException
		{
		Boolean templateExists = callerSelenium.isTextPresent(templateName);
		return templateExists;
		}
				
		public String getWorkflowState() throws InterruptedException
		{
			String workflowState;
			workflowState=callerSelenium.getTable("_id83:_id84:0:_id398:wkpTabID:0:_id616:jobHistoryTable.1.4");
		    return workflowState;
		}
	

}