package com.comverse.upm.upmPages;

/**
 * 
 * @author osmolya
 */

import static org.junit.Assert.assertTrue;

import com.comverse.upm.common.UpmWait;
import com.thoughtworks.selenium.Selenium;

public class ProcessPage {

    private Selenium callerSelenium;
    private long DefaultSleep = 3000;

    public ProcessPage(Selenium selenium) {
        this.callerSelenium = selenium;
    }

    public void clickCreateNewTemplate() throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        callerSelenium.click("id=_id83:_id84:0:_id398:wkpTabID:0:_id399:newTemplate");
        waiting.forElementIdPresent("name=_id83:_id84:0:_id398:templateEdit:templateName");
    }

    public void typeTemplateName(String templateName) throws Exception {
        callerSelenium.type("name=_id83:_id84:0:_id398:templateEdit:templateName", templateName);

    }

    public void typeModuleName(String moduleName) throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        callerSelenium.click("id=_id83:_id84:0:_id398:templateEdit:_id832");
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:_id885", "label=" + moduleName);
        waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:selectNodeType");
    }

    public void selectNodeType(String nodeType) throws Exception {
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:selectNodeType", "label=" + nodeType);
    }

    public void selectMode(String mode) throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:taskModeSelect", "label=" + mode);
        waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:serverId");
        ;
    }

    public void selectServerId(String serverId) throws Exception {
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:serverId", "label=" + serverId);
        Thread.sleep(DefaultSleep);
    }

    public void saveTemplate() throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        callerSelenium.click("id=_id83:_id84:0:_id398:submitBtn");
        waiting.forElementIdPresent("_id83:_id84:0:_id398:wkpTabID:0:_id399:refreshData");
        callerSelenium.click("id=_id83:_id84:0:_id398:wkpTabID:0:_id399:refreshData");
    }

    public void selectTemplate(String templateName) throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        waiting.forElementIdPresent("//*[text()='" + templateName + "']");
        callerSelenium.click("//*[text()='" + templateName + "']");
        waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:selectProcess");
    }

    public void useAccountNumberQuery(String accountNo) throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:selectProcess", "label=AccountNumber");
        waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue");
        callerSelenium.type("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue", accountNo);
    }

    public void selectTaskName(String taskName) throws Exception {
        //      UpmWait waiting = new UpmWait(callerSelenium);
        //	callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:selectProcess", "label=AccountNumber");
        callerSelenium.select("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:taskNameList", "label=" + taskName);
        //	waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue");
        //	callerSelenium.type("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue", accountNo);
    }

    public void addRcsBatchWkf() throws Exception {
        //  UpmWait waiting = new UpmWait(callerSelenium);     
        callerSelenium.click("id=_id83:_id84:0:_id398:templateEdit:WKFprocessTable:2:add");
        //	waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue");
    }
    
    public void selectMultiInstanceCheckbox() throws Exception {
        // UpmWait waiting = new UpmWait(callerSelenium);     
        callerSelenium.click("id=_id83:_id84:0:_id398:templateEdit:_id4001");
        //waiting.forElementIdPresent("_id83:_id84:0:_id398:templateEdit:WKFprocessTable:0:WKFprocessDataTable:0:queryValue");
    }
    
    public void runTemplate() throws Exception {
        //	UpmWait waiting = new UpmWait(callerSelenium);
        //Select 'Run'
        callerSelenium.click("id=_id83:_id84:0:_id398:run");
        assertTrue(callerSelenium.getConfirmation().matches("^Do you want to run workflow with this template data now [\\s\\S]$"));
        Thread.sleep(1000);
        //  Select 'Cancel' to close template window;
        cancelTemplate();
    }

    public void cancelTemplate() throws Exception {
        UpmWait waiting = new UpmWait(callerSelenium);
        waiting.forElementIdPresent("//input[@value='Cancel']");
        //Click Cancel
        //  	callerSelenium.click("id=_id83:_id84:0:_id398:_id973");
        callerSelenium.click("//input[@value='Cancel']");
    }

    public void selectHistoryWorkflowType(String workflowType) throws Exception {
        callerSelenium.select("id=_id83:_id84:0:_id398:wkpTabID:0:_id616:_id619", "label=" + workflowType);
        Thread.sleep(DefaultSleep);
    }

    public void selectTemplateWorkflowType(String workflowType) throws Exception {
        callerSelenium.select("id=_id83:_id84:0:_id398:wkpTabID:0:_id399:_id404", "label=" + workflowType);
        Thread.sleep(DefaultSleep);
    }


    
    public void clickHistoryRefresh() throws Exception {
        callerSelenium.click("id=_id83:_id84:0:_id398:wkpTabID:0:_id616:refreshData");
        Thread.sleep(DefaultSleep);
    }

}
