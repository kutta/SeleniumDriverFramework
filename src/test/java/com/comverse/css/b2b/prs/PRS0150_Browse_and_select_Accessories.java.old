package com.comverse.css.b2b.prs;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2b.Nsa;
import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;

public class PRS0150_Browse_and_select_Accessories extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPRS0150_Browse_and_select_Accessories() throws Exception {
        try {
            Prep b2bApplication = new Prep(selenium);
            User myUser = new User(selenium);

            Nsa doNsa = new Nsa(selenium);
            Wait waiting = new Wait(selenium);

            app = b2bApplication.launchB2B();
            version = b2bApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2bApplication.getBrowserAgent();

            myUser.loginB2BAdmin();

            selenium.click("//a[@id='mnu_ACCOUNT']");
            waiting.forPageToLoad();

            selenium.click("firstYouCanconvergentNewAccountMenu");
            waiting.forPageToLoad();

            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            doNsa.modifyAccountDetails("USD");
            doNsa.reviewCustomerData();

            waiting.forTextPresent("Subscriber Bundles/Primary Offers");
            waiting.forTextPresent("per page");

            selenium.click("//div[@id='shoppingTabs']/ul/li[4]/a/em");
            waiting.forTextPresent("Accessory Name");
            waiting.forTextPresent("per page");
            selenium.type("filter_acc_manufacturer2", "Manufacturer 1");
            selenium.keyUp("filter_acc_manufacturer2", "\\40");
            waiting.forTextPresent("CSS-PQA-Headset-Voice-ACC5");
            assertFalse(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC7"));
            selenium.type("filter_acc_stock", "blabla");
            selenium.keyUp("filter_acc_stock", "\\40");
            waiting.forTextPresent("No records found.");
            selenium.type("filter_acc_stock", "stock unknown");
            selenium.keyUp("filter_acc_stock", "\\40");
            waiting.forTextPresent("CSS-PQA-Headset-Voice-ACC5");
            selenium.type("filter_acc_name", "CSS-PQA-Battery-Phone-ACC4");
            selenium.keyUp("filter_acc_name", "\\40");
            waiting.forTextPresent("CSS-PQA-Battery-Phone-ACC4");
            assertFalse(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC5"));

            selenium.click("view_acc_details_" + doNsa.selectAccessoryID("CSS-PQA-Battery-Phone-ACC4") + "_"
                           + doNsa.selectAccessoryID2("CSS-PQA-Battery-Phone-ACC4"));
            waiting.forTextPresent("Description of CSS_PQA_Battery_Phone_ACC4");
            assertTrue(selenium.isTextPresent("/Images/Battery_Large_1.jpg"));
            assertTrue(selenium.isTextPresent("stock unknown"));

            selenium.click("//div[@id='accDetails']/ul/li[2]/a/em");
            assertTrue(selenium.isTextPresent("CSS_PQA Terms And Conditions"));
            selenium.click("//input[@id='accDetailsClose']");
            waiting.forTextPresent("Compare");

            selenium.click("//img[@onclick=\"increase('qtyByAcc" + doNsa.qtyAccessoryID("CSS-PQA-Battery-Phone-ACC4") + "_"
                           + doNsa.qtyAccessoryID2("CSS-PQA-Battery-Phone-ACC4") + "')\"]");
            selenium.click("//img[@onclick=\"increase('qtyByAcc" + doNsa.qtyAccessoryID("CSS-PQA-Battery-Phone-ACC4") + "_"
                           + doNsa.qtyAccessoryID2("CSS-PQA-Battery-Phone-ACC4") + "')\"]");
            selenium.click("//img[@onclick=\"decrease('qtyByAcc" + doNsa.qtyAccessoryID("CSS-PQA-Battery-Phone-ACC4") + "_"
                           + doNsa.qtyAccessoryID2("CSS-PQA-Battery-Phone-ACC4") + "')\"]");

            selenium.click("//input[@name='doSubmit']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("My Basket");
            assertFalse(selenium.isTextPresent("59.98"));
            assertTrue(selenium.isTextPresent("CSS-PQA-Battery-Phone-ACC4"));
            selenium.click("checkout");
            selenium.waitForPageToLoad("30000");
            doNsa.acceptTermsAndConditions("CSS-PQA-Battery-Phone-ACC4");
            doNsa.checkoutDeliveryAddress();
            selenium.click("submitButton");
            doNsa.enterImmediatePaymementDetails();
            bugId = "CBS00130778";
            doNsa.checkoutConfirmation(app);
            bugId = "NoBug";

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}