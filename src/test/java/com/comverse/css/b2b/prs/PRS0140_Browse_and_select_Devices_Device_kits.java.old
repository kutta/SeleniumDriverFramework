package com.comverse.css.b2b.prs;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2b.Nsa;
import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;

public class PRS0140_Browse_and_select_Devices_Device_kits extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPRS0140_Browse_and_select_Devices_Device_kits() throws Exception {
        try {
            Prep b2bApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nsa doNsa = new Nsa(selenium);

            Wait waiting = new Wait(selenium);

            app = b2bApplication.launchB2B();
            version = b2bApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2bApplication.getBrowserAgent();

            myUser.loginB2BAdmin();

            selenium.click("//a[@id='mnu_ACCOUNT']");
            waiting.forPageToLoad();

            selenium.click("firstYouCanconvergentNewAccountMenu");
            waiting.forPageToLoad();

            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            doNsa.modifyAccountDetails("USD");
            doNsa.reviewCustomerData();

            waiting.forTextPresent("Subscriber Bundles/Primary Offers");
            waiting.forTextPresent("per page");

            selenium.click("//div[@id='shoppingTabs']/ul/li[3]/a/em");
            waiting.forTextPresent("Advanced Filter");
            selenium.click("lnk_ADVANCE_FILTER");
            selenium.type("filterByFreeText", "CSS-PQA-DataDevice-SmartPhones-DEV4");
            selenium.keyUp("filterByFreeText", "\\40");

            selenium.click("view_details_" + doNsa.viewDetailHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV4"));

            waiting.forTextPresent("Description of CSS_PQA_DataDevice_SmartPhones_DEV4");
            assertTrue(selenium.isTextPresent("/Images/DataDevice_Large_1.jpg"));
            assertTrue(selenium.isTextPresent("stock unknown"));

            selenium.click("//div[@id='devDetails']/ul/li[2]/a/em");
            assertTrue(selenium.isTextPresent("CSS_PQA Terms And Conditions"));
            selenium.click("//div[@id='devDetails']/ul/li[3]/a/em");
            assertTrue(selenium.isTextPresent("There is no device kit using this handset."));
            selenium.click("//div[@id='devDetails']/ul/li[4]/a/em");
            assertTrue(selenium.isTextPresent("No compatible accessory with this device"));
            selenium.click("//input[@id='deviceDetailsClose']");
            waiting.forTextPresent("Compare");
            selenium.click("//form[@id='select_" + doNsa.selectHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV4") + "']/input");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("per page");
            selenium.click("//input[@name='nothanks']");
            selenium.waitForPageToLoad("30000");

            doNsa.checkMyBasketContent("CSS-PQA-DataDevice-SmartPhones-DEV4");
            doNsa.acceptTermsAndConditions("CSS-PQA-DataDevice-SmartPhones-DEV4");
            doNsa.checkoutDeliveryAddress();
            selenium.click("submitButton");
            waiting.forPageToLoad();
            doNsa.enterImmediatePaymementDetails();
            bugId = "CBS00130778";
            doNsa.checkoutConfirmation(app);
            bugId = "NoBug";

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}