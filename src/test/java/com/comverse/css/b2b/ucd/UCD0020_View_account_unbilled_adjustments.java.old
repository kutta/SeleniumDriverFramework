package com.comverse.css.b2b.ucd;

import com.comverse.css.common.PropertyHelper;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.b2b.Nsa;

public class UCD0020_View_account_unbilled_adjustments extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testUCD0020_View_account_unbilled_adjustments() throws Exception {
        try {
            Prep b2bApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nsa doNsa = new Nsa(selenium);
            Wait waiting = new Wait(selenium);
            PropertyHelper propsHelper = new PropertyHelper();
            String InvoiceAdj = propsHelper.getAccountProperties("Unbilled.Adjustment");

            app = b2bApplication.launchB2B();
            version = b2bApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2bApplication.getBrowserAgent();

            myUser.loginB2BAdmin();
            doNsa.checkForExistingBasketAndDiscard();
            doNsa.waitForExistingAccountSynchronised(InvoiceAdj);

            selenium.click("mnu_BILLS_PAYMENTS");
            waiting.forPageToLoad();

            assertEquals("View invoices", selenium.getTitle());
            assertTrue(selenium.isTextPresent("invoices found"));
            assertTrue(selenium.isTextPresent("Last invoice"));

            selenium.click("//a[@id='smnu_UNBILLED_TRANSACTIONS']");
            waiting.forTextPresent("View unbilled transaction");
            selenium.click("//a[@id='youcan_VIEW_ADJUSTMENTS']");
            waiting.forTextPresent("View Unbilled Adjustments");
            assertTrue(selenium.isTextPresent("Unbilled Adjustments"));
            assertTrue(selenium.isTextPresent("Miscellaneous Adjustment"));

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}