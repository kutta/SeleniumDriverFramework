package com.comverse.css.b2b.bkm;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.b2b.Nsa;

public class BKM0040_Change_primary_offer_of_a_selection extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testBKM0040_Change_primary_offer_of_a_selection() throws Exception {
        try {
            Prep b2bApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nsa doNsa = new Nsa(selenium);
            Wait waiting = new Wait(selenium);

            app = b2bApplication.launchB2B();
            version = b2bApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2bApplication.getBrowserAgent();

            myUser.loginB2BAdmin();

            selenium.click("//a[@id='mnu_ACCOUNT']");
            waiting.forPageToLoad();

            selenium.click("//a[@id='firstYouCanconvergentExistingAccountMenu']");
            waiting.forTextPresent("Customer Acquisition - Customer Data Review");
            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            waiting.forTextPresent("Subscriber Bundles/Primary Offers");
            waiting.forTextPresent("per page");

            selenium.click("//div[@id='shoppingTabs']/ul/li[2]/a/em");
            waiting.forTextPresent("DIY - Super-Pack");
            selenium.select("//select[@name='accountBundleId']", "label=DIY - Super-Pack");
            waiting.forTextPresent("DIY allows you to extensively customize your services.");
            selenium.click("link=DIY - 10 / 10 Super Bundle");
            waiting.forTextPresent("Monthly");
            assertTrue(selenium.isTextPresent("52.00"));
            assertTrue(selenium.isTextPresent("Any"));
            assertTrue(selenium.isTextPresent("Network TV "));
            assertTrue(selenium.isTextPresent("10% Discount on Voice/SMS/MMS RT Promo"));
            selenium.click("//div[@id='planDetails']/ul/li[2]/a/em");
            waiting.forTextPresent("Bundle Supplementary Offers");
            assertTrue(selenium.isTextPresent("Optional Supplementary Offers"));
            selenium.click("//div[@id='planDetails']/ul/li[3]/a/em");
            waiting.forTextPresent("DIY - Super-Pack Terms and Conditions.");
            selenium.click("//form[@id='select_priceplan']/input");
            waiting.forPageToLoad();
            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            doNsa.selectOffersForYourSubscriber("DIYe -Mandatory Service 4 Extended-Interaction T.V. Super Bundle.");
            doNsa.configureOffers();
            doNsa.selectEmailReferenceInventory();
            waiting.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("DIY - 10 / 10 Super Bundle"));
            assertTrue(selenium.isTextPresent("DIY - Interactive TV Offer for All"));

            selenium.click("//a[@id='chg_pp_0']/img");
            waiting.forTextPresent("Shopping");
            selenium.click("//div[@id='shoppingTabs']/ul/li/a/em");
            waiting.forTextPresent("Payment Mode");
            selenium.type("filter_str_plan_name", "DIY - Monthly Super Bundle");
            selenium.keyUp("filter_str_plan_name", "\\40");
            waiting.forTextPresent("DIY - Monthly Super Bundle");
            selenium.click("link=DIY - Monthly Super Bundle");
            waiting.forTextPresent("Rate Class");
            selenium.click("//form[@id='select_priceplan']/input");
            waiting.forPageToLoad();
            doNsa.selectHandSet("");
            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            doNsa.selectOffersForYourSubscriber("");
            doNsa.configureOffers();
            waiting.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("DIYe - Extended-Interaction TV Super-Pack"));
            assertTrue(selenium.isTextPresent("DIYe -Mandatory Service 4 Extended-Interaction T.V. Super Bundle."));
            assertFalse(selenium.isTextPresent("DIYe - Extended-Interaction TV Super Bundle"));

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}