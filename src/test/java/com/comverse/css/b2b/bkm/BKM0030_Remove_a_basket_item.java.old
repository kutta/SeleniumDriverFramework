package com.comverse.css.b2b.bkm;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.b2b.Nsa;

public class BKM0030_Remove_a_basket_item extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testBKM0030_Remove_a_basket_item() throws Exception {
        try {
            Prep b2bApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nsa doNsa = new Nsa(selenium);
            Wait waiting = new Wait(selenium);

            app = b2bApplication.launchB2B();
            version = b2bApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2bApplication.getBrowserAgent();

            myUser.loginB2BAdmin();

            selenium.click("//a[@id='mnu_ACCOUNT']");
            waiting.forPageToLoad();

            selenium.click("//a[@id='firstYouCanconvergentExistingAccountMenu']");
            waiting.forTextPresent("Customer Acquisition - Customer Data Review");
            selenium.click("//input[@value='Continue >']");
            doNsa.chooseAccountBundles("Business - Ultra Postpaid Bundle");
            doNsa.selectHandSet("");
            selenium.click("//input[@value='Continue >']");
            waiting.forPageToLoad();
            doNsa.selectOffersForYourSubscriber("2010 Super Bowl News");
            doNsa.configureOffers();
            assertTrue(selenium.isTextPresent("My Basket"));
            assertTrue(selenium.isTextPresent("Business - Ultra Postpaid Bundle"));
            assertTrue(selenium.isTextPresent("Business - Ultra Postpaid"));
            assertTrue(selenium.isTextPresent("2010 Super Bowl News"));
            selenium.click("//input[@name='clear']");
            waiting.forTextPresent("Remove Basket");
            selenium.click("//input[@name='cancel']");
            waiting.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("Business - Ultra Postpaid Bundle"));
            assertTrue(selenium.isTextPresent("Business - Ultra Postpaid"));
            assertTrue(selenium.isTextPresent("2010 Super Bowl News"));

            selenium.click("//a[@id='add_srv_ACCOUNT_LEVEL_SELECTION']/img");
            doNsa.selectOffersForYourAccount("Basic Postpaid - Cyclic Balance");
            doNsa.configureBalance("Bonus Money", "1000");
            waiting.forTextPresent("My Basket");

            selenium.click("//a[@id='rem_srv_" + doNsa.GetIDRemoveService("2010 Super Bowl News") + "']/img");
            waiting.forTextPresent("Remove supplementary offer");
            selenium.click("//input[@name='cancel']");
            waiting.forTextPresent("My Basket");
            selenium.click("//a[@id='rem_srv_" + doNsa.GetIDRemoveService("2010 Super Bowl News") + "']/img");
            waiting.forTextPresent("Remove supplementary offer");
            selenium.click("//input[@name='submit']");
            waiting.forTextPresent("My Basket");
            assertFalse(selenium.isTextPresent("2010 Super Bowl News"));

            selenium.click("//img[@alt='Remove Offer']");
            waiting.forTextPresent("Remove supplementary offer");
            selenium.click("//input[@name='cancel']");
            waiting.forTextPresent("My Basket");
            selenium.click("//img[@alt='Remove Offer']");
            waiting.forTextPresent("Remove supplementary offer");
            selenium.click("//input[@name='submit']");
            waiting.forTextPresent("My Basket");
            assertFalse(selenium.isTextPresent("Basic Postpaid - Cyclic Balance"));

            selenium.click("//img[@alt='Remove Selection']");
            waiting.forTextPresent("Remove Selection");
            selenium.click("//input[@name='cancel']");
            waiting.forTextPresent("My Basket");
            selenium.click("//img[@alt='Remove Selection']");
            waiting.forTextPresent("Remove Selection");
            selenium.click("//input[@name='submit']");

            waiting.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("Your basket is empty"));

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}