package com.comverse.css.csr.chk;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Nca;

public class CHK0050_Set_order_delivery_address extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testCHK0050_Set_order_delivery_address() throws Exception {
        try {
            Prep csrApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            long ts = csrApplication.generateTimeStamp();

            app = csrApplication.launchCSR();
            version = csrApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = csrApplication.getBrowserAgent();

            myUser.loginCSRAdmin();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("Residential - Ultra Postpaid");

            bugId = "CBS00105315";
            doNca.selectHandSet("CSS-PQA-DataDevice-SmartPhones-DEV4_EN");
            bugId = "NoBug";

            doNca.enterSubscriptionDetails(ts);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            doNca.configureBalance("GPRS WAP-INTERNET_limit", "1024");
            doNca.selectThreeInventory();
            doNca.checkMyBasketContent("Residential - Ultra Postpaid");
            doNca.acceptTermsAndconditions("CSS_PQA Terms And Conditions");

            assertTrue(selenium.isTextPresent("Delivery Details"));
            selenium.type("firstName", "DeliveryFN");
            selenium.type("lastName", "DeliveryLN");
            selenium.type("phoneNumber", "9876543210");
            selenium.type("address_line_1", "DeliveryAdd1");
            selenium.type("address_line_2", "DeliveryAdd2");
            selenium.type("address_line_3", "DeliveryAdd3");
            selenium.type("address_line_4", "DeliveryAdd4");
            selenium.type("zip_code", "78600");
            selenium.type("city", "DeliveryCity");
            selenium.select("country", "label=France");
            selenium.click("//input[@id='nav_next_page']");
            waiting.forPageToLoad();

            assertTrue(selenium.isTextPresent("Checkout Review"));
            selenium.click("//div[@id='addressTabs']/ul/li[2]/a/em");
            assertTrue(selenium.isTextPresent("DeliveryFN"));
            assertTrue(selenium.isTextPresent("DeliveryLN"));
            assertTrue(selenium.isTextPresent("9876543210"));
            assertTrue(selenium.isTextPresent("DeliveryAdd1"));
            assertTrue(selenium.isTextPresent("DeliveryAdd2"));
            assertTrue(selenium.isTextPresent("DeliveryAdd3"));
            assertTrue(selenium.isTextPresent("DeliveryAdd4"));
            assertTrue(selenium.isTextPresent("78600"));
            assertTrue(selenium.isTextPresent("DeliveryCity"));
            assertTrue(selenium.isTextPresent("France"));
            selenium.click("//input[@id='paymentMode' and @name='paymentMode' and @value='PAY_ON_NEXT_BILL']");
            selenium.click("submitButton");
            waiting.forPageToLoad();

            doNca.checkoutConfirmation(app);
            bugId = "CBS00108367";
            doNca.waitForAccountCreated(ts);
            bugId = "NoBug";

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }
}
