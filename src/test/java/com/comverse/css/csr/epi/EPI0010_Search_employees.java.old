package com.comverse.css.csr.epi;

import java.util.Properties;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;

public class EPI0010_Search_employees extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testEPI0010_Search_employees() throws Exception {
        try {
            final String PROPERTY_FILE = "Passwords.properties";
            Prep csrApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Wait waiting = new Wait(selenium);
            Properties props = User.readProperties(PROPERTY_FILE);
            String loginCSRAdmin = props.getProperty("LOGIN.CSRAdmin");
            String loginCSRUser = props.getProperty("LOGIN.CSRUser");

            app = csrApplication.launchCSR();
            version = csrApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = csrApplication.getBrowserAgent();

            myUser.loginSeniorAcctManager();
            selenium.click("//a[@id='mnu_TELCO']");
            waiting.forTextPresent("View Hierarchy");
            selenium.click("//a[@id='smnu_SEARCH_MEMBER']");
            waiting.forTextPresent("Search Employee");
            selenium.type("//form[@id='form_SEARCH_MEMBERS_RESULT_0']/div/fieldset/div[1]/input", "*");
            selenium.click("//input[@value='Search']");
            waiting.forTextPresent("Search Employee");
            assertTrue(selenium.isTextPresent("employee(s) found"));
            selenium.type("//form[@id='form_SEARCH_MEMBERS_RESULT_0']/div/fieldset/div[1]/input", "employee does not exist");
            selenium.click("//input[@value='Search']");
            waiting.forTextPresent("Search Employee");
            assertTrue(selenium.isTextPresent("No matching employee found"));
            selenium.type("//form[@id='form_SEARCH_MEMBERS_RESULT_0']/div/fieldset/div[1]/input", "*QA*");
            selenium.click("//input[@value='Search']");
            waiting.forTextPresent("Search Employee");
            assertTrue(selenium.isTextPresent("employee(s) found"));
            assertTrue(selenium.isTextPresent(loginCSRAdmin));
            selenium.type("//form[@id='form_SEARCH_MEMBERS_RESULT_0']/div/fieldset/div[1]/input", loginCSRAdmin);
            selenium.click("//input[@value='Search']");
            waiting.forTextPresent("Search Employee");
            assertTrue(selenium.isTextPresent("1 employee(s) found"));
            assertTrue(selenium.isTextPresent(loginCSRAdmin));
            selenium.type("//form[@id='form_SEARCH_MEMBERS_RESULT_1']/div/fieldset/div/input", loginCSRUser);
            selenium.click("//form[@id='form_SEARCH_MEMBERS_RESULT_1']/fieldset/input[7]");
            waiting.forTextPresent("Search Employee");
            assertTrue(selenium.isTextPresent("1 employee(s) found"));
            assertTrue(selenium.isTextPresent(loginCSRUser));
            assertTrue(selenium.isTextPresent("Telco CSR User"));

            selenium.click("//a[@id='lnk_MEMBER_0']");
            waiting.forTextPresent("Contact Information");
            assertTrue(selenium.isTextPresent(loginCSRUser));

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}