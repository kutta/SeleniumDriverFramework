package com.comverse.css.csr.evt;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Nca;

public class EVT06_Resend_an_OBC extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testEVT06_Resend_an_OBC() throws Exception {
        try {
            Prep csrApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            long ts = csrApplication.generateTimeStamp();

            app = csrApplication.launchCSR();
            version = csrApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = csrApplication.getBrowserAgent();

            myUser.loginCSRAdmin();
            //doNca.withResidentialUltraPostpaid(app, ts);
            doNca.waitForExistingAccountSynchronised("4263");
            Thread.sleep(5000);

            waiting.forElementPresent("css=a[title=\"View Event Details\"]");
            selenium.click("//img[@title='Send communication']");
            waiting.forEndOfWatingPage();

            assertEquals("Send communication", selenium.getTitle());
            selenium.select("id=eventType", "label=Order");
            selenium.select("id=caseType", "label=Select All");
            selenium.click("name=ok");
            waiting.forEndOfWatingPage();

            selenium.select("id=preferredChannelId", "label=Email");
            selenium.select("id=templateList", "label=Case-Case_Creation_Report-email.jrxml");
            selenium.click("//input[@name='ok' and @value='Continue']");
            waiting.forEndOfWatingPage();

            assertEquals("Send communication", selenium.getTitle());
            selenium.type("id=emailTo", "a@a.fr");
            selenium.click("//input[@value='Send communication']");
            waiting.forEndOfWatingPage();

            waiting.forTextPresent("Outbound Communication");
            assertEquals("Outbound Communication", selenium.getTitle());
            assertTrue(selenium.isTextPresent("The outbound communication has been sent"));
            selenium.click("//input[@value='OK']");
            waiting.forEndOfWatingPage();

            assertTrue(selenium.isTextPresent("Account Details"));

            selenium.click("css=a[title=\"View Event Details\"]");
            bugId = "CBS00132822";
            assertEquals("XXX", selenium.getTitle());
            bugId = "NoBug";

            assertEquals("ReSend communication", selenium.getTitle());
            selenium.click("//input[@value='Send communication']");
            bugId = "CBS00132838";

            bugId = "NoBug";

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}