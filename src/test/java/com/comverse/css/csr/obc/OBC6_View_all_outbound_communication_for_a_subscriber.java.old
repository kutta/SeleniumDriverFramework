package com.comverse.css.csr.obc;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Navigation;
import com.comverse.css.pos.Nca;

public class OBC6_View_all_outbound_communication_for_a_subscriber extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testOBC6_View_all_outbound_communication_for_a_subscriber() throws Exception {
        try {
            Prep csrApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            Navigation doNavigate = new Navigation(selenium);
            long ts = csrApplication.generateTimeStamp();

            app = csrApplication.launchCSR();
            version = csrApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = csrApplication.getBrowserAgent();

            myUser.loginCSRAdmin();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("Residential - Ultra Postpaid");
            doNca.selectHandSet("");
            doNca.enterSubscriptionDetails(ts);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            doNca.configureBalance("GPRS WAP-INTERNET_limit", "1024");
            doNca.selectThreeInventory();
            doNca.checkMyBasketContent("Residential - Ultra Postpaid");
            doNca.checkoutReview();
            doNca.checkoutConfirmation(app);
            doNca.waitForAccountCreated(ts);

            doNavigate.gotoSubscriberPage();
            selenium.click("sendOutboundCommunication");
            waiting.forEndOfWatingPage();

            assertEquals("Send communication", selenium.getTitle());
            selenium.select("caseType", "label=Select All");
            selenium.select("problemArea", "label=Select All");
            selenium.click("ok");
            waiting.forEndOfWatingPage();

            assertEquals("Send communication", selenium.getTitle());
            selenium.select("id=preferredChannelId", "label=Printed Mail");
            selenium.select("templateList", "label=Basket-Basket_Summary-print.jrxml");
            selenium.select("formatList", "label=html");
            selenium.click("//input[@name='ok' and @value='Continue']");
            waiting.forEndOfWatingPage();

            assertEquals("Send communication", selenium.getTitle());
            selenium.click("//input[@value='Send communication']");
            waiting.forEndOfWatingPage();

            waiting.forTextPresent("Outbound Communication");
            assertEquals("Outbound Communication", selenium.getTitle());
            assertTrue(selenium.isTextPresent("The outbound communication has been sent"));
            selenium.click("//input[@value='OK']");
            waiting.forEndOfWatingPage();

            assertTrue(selenium.isTextPresent("Subscriber details"));
            selenium.click("viewOutboundCommunication");
            waiting.forPageToLoad();
            bugId = "CBS00127401";
            assertEquals("View Outbound Communication", selenium.getTitle());

            selenium.click("//fieldset[2]/input[2]");
            waiting.forTextPresent("Sent to NG");
            bugId = "NoBug";
            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }
}
