package com.comverse.css.csr.prs;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.pos.Nca;
import com.comverse.css.common.Wait;

public class PRS0180_Compare_Devices extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPRS0180_Compare_Devices() throws Exception {
        try {
            Prep csrApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            long ts = csrApplication.generateTimeStamp();

            app = csrApplication.launchCSR();
            version = csrApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = csrApplication.getBrowserAgent();

            myUser.loginCSRAdmin();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();

            waiting.forTextPresent("Subscriber Bundles/Primary Offers");
            selenium.click("//div[@id='shoppingTabs']/ul/li[3]/a/em");
            waiting.forTextPresent("per page");

            bugId = "CBS00105315";
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-VoiceDevice-StandardPhones-DEV1_EN") + "']");
            bugId = "NoBug";

            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN") + "']");

            selenium.click("//input[@name='select' and @value='Compare']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("Compare Devices");
            assertTrue(selenium.isTextPresent("Comparison of Devices"));
            assertTrue(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV1_EN"));
            assertTrue(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN"));
            assertTrue(selenium.isTextPresent("19.99"));
            assertTrue(selenium.isTextPresent("9.99"));
            assertTrue(selenium.isTextPresent("Outright Price"));
            assertTrue(selenium.isTextPresent("Printer Friendly Version"));

            selenium.click("//input[@name='select' and @value='Return to List']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("per page");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN") + "']");
            selenium.click("reset");
            waiting.forTextPresent("per page");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV3_EN") + "']");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV4_EN") + "']");
            selenium.click("//input[@name='select' and @value='Compare']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("Compare Devices");
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV3_EN"));
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV4_EN"));
            assertFalse(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN"));
            selenium.click("//input[@name='select' and @value='Return to List']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("per page");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-VoiceDevice-StandardPhones-DEV1_EN") + "']");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN") + "']");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV3_EN") + "']");
            selenium.click("//a[@id='add_to_compare_" + doNca.compareHandsetID("CSS-PQA-DataDevice-SmartPhones-DEV4_EN") + "']");
            selenium.click("//input[@name='select' and @value='Compare']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("Compare Devices");
            assertTrue(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV2_EN"));
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV3_EN"));
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV4_EN"));
            assertFalse(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV1_EN"));

            result = "pass";
        } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }
}
