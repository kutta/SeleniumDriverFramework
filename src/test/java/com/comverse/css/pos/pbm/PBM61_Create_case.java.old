package com.comverse.css.pos.pbm;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Nca;

public class PBM61_Create_case extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPBM61_Create_case() throws Exception {
        try {
            Prep posApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            long ts = posApplication.generateTimeStamp();

            app = posApplication.launchPOS();
            version = posApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = posApplication.getBrowserAgent();

            myUser.loginTelcoAdmin();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("Residential - Ultra Postpaid");
            doNca.selectHandSet("");
            doNca.enterSubscriptionDetails(ts);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            doNca.configureBalance("GPRS WAP-INTERNET_limit", "1024");
            doNca.selectThreeInventory();
            doNca.checkMyBasketContent("Residential - Ultra Postpaid");
            doNca.checkoutReview();
            doNca.checkoutConfirmation(app);
            doNca.waitForAccountCreated(ts);

            selenium.click("mnu_PROBLEMS");
            waiting.forPageToLoad();

            waiting.forTextPresent("List Cases");
            selenium.click("smnu_CASE.ADD");

            waiting.forTextPresent("Add case");
            assertEquals("Add case", selenium.getTitle());
            selenium.select("categoryId", "label=Self-Service Problem");
            selenium.select("subCategoryId", "label=Forgot Password");
            //  selenium.select("priorityId", "label=Low");
            //  selenium.type("name", "CM test");
            selenium.type("description", "CM description");
            selenium.type("note", "CM note");
            selenium.click("ok");
            waiting.forPageToLoad();

            //   waiting.forTextPresent("List Cases");
            //  selenium.click("smnu_CASE.ADD");
            waiting.forTextPresent("Add case");
            assertEquals("Add case - review", selenium.getTitle());
            assertTrue(selenium.isTextPresent("Self-Service Problem"));
            assertTrue(selenium.isTextPresent("Forgot Password"));
            //assertTrue(selenium.isTextPresent("Low"));

            //  bugId = "CBS00108738";
            //   assertEquals("CM test", selenium.getValue("name"));
            //   bugId = "NoBug";

            assertTrue(selenium.isTextPresent("CM description"));
            assertTrue(selenium.isTextPresent("CM note"));
            selenium.click("//input[@value='Modify']");
            waiting.forPageToLoad();

            assertEquals("Add case", selenium.getTitle());
            selenium.select("categoryId", "label=General Request");
            selenium.select("subCategoryId", "label=Need Credit Limit Increased");
            //  selenium.type("name", "CM test2");
            selenium.type("description", "CM description2");
            selenium.type("note", "CM note2");
            selenium.click("ok");
            waiting.forPageToLoad();

            waiting.forTextPresent("Add case - review");
            assertEquals("Add case - review", selenium.getTitle());
            //  assertEquals("CM test2", selenium.getValue("name"));
            assertTrue(selenium.isTextPresent("CM description2"));
            assertTrue(selenium.isTextPresent("CM note2"));
            selenium.click("ACTION_CREATE");
            waiting.forPageToLoad();

            waiting.forTextPresent("Add case - confirmation");
            assertEquals("Add case - confirmation", selenium.getTitle());
            selenium.click("//input[@value='OK']");
            waiting.forPageToLoad();

            assertEquals("Add case", selenium.getTitle());

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }
}
