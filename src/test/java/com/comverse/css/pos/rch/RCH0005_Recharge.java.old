package com.comverse.css.pos.rch;

import com.comverse.css.common.PropertyHelper;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Nca;
import com.comverse.css.common.Prep;

public class RCH0005_Recharge extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testRCH0005_Recharge() throws Exception {
        try {
            Prep posApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);
            long ts = posApplication.generateTimeStamp();

            app = posApplication.launchPOS();
            version = posApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = posApplication.getBrowserAgent();

            myUser.loginTelcoUser();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Pure Prepaid Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("DIY - Interactive TV Offer for All");
            doNca.enterSubscriptionDetails(ts);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            String SIM = doNca.selectThreeInventoryOneEmail();
            doNca.checkMyBasketContent("DIY - Interactive TV Offer for All");
            doNca.acceptTermsAndconditions("DIY - Interactive TV Offer for All Terms and Conditions.");
            doNca.checkoutReview();
            doNca.checkoutConfirmation(app);
            doNca.waitForSubscriberCreated(SIM);

            selenium.click("viewBalances");
            waiting.forPageToLoad();

            assertEquals("View Balance", selenium.getTitle());
            selenium.click("link=Recharge by voucher");
            waiting.forPageToLoad();

            PropertyHelper propsHelper = new PropertyHelper();
            String voucher = propsHelper.getAccountProperties("Recharge.voucher");

            assertEquals("Recharge with voucher", selenium.getTitle());
            selenium.type("pkgnumber", voucher);
            selenium.click("//input[@value='Continue']");
            waiting.forPageToLoad();

            waiting.forTextPresent("CORE BALANCE");
            assertEquals("Recharge Subscriber", selenium.getTitle());
            assertTrue(selenium.isTextPresent("has been successfully recharged"));
            selenium.click("youcan_BACK_TO_BALANCE_VIEW");
            waiting.forPageToLoad();

            assertEquals("View Balance", selenium.getTitle());

        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}