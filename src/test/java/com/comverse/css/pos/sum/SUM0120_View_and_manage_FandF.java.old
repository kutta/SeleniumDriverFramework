package com.comverse.css.pos.sum;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.CSSSeleneseTestCase;
import com.comverse.css.common.Prep;
import com.comverse.css.common.PropertyHelper;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Navigation;
import com.comverse.css.pos.Nca;

public class SUM0120_View_and_manage_FandF extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testSUM0120_View_and_manage_FandF() throws Exception {
        try {
            Prep posApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);

            app = posApplication.launchPOS();
            version = posApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = posApplication.getBrowserAgent();

            myUser.loginTelcoUser();
            PropertyHelper propsHelper = new PropertyHelper();
            Navigation Navigate = new Navigation(selenium);

            String last_name = propsHelper.readLastNameFromFile();

            doNca.checkForExistingBasketAndDiscard();

            Navigate.selectAccountByLastName(last_name);
            Navigate.selectFirstSubscriberFromNavigationPanel();
            /* doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(ts);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("Residential - Ultra Postpaid");
            doNca.selectHandSet("");
            doNca.enterSubscriptionDetails(ts);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            doNca.configureBalance("GPRS WAP-INTERNET_limit", "1024");
            String SIM = doNca.selectThreeInventory();
            doNca.checkMyBasketContent("Residential - Ultra Postpaid");
            doNca.checkoutReview();
            doNca.checkoutConfirmation(app);
            doNca.waitForSubscriberCreated(SIM);*/

            selenium.click("viewFriendsFamily");
            waiting.forPageToLoad();
            assertEquals("Your Friends and Family numbers", selenium.getTitle());
            selenium.click("//input[@value='Reconfigure']");
            waiting.forPageToLoad();
            assertEquals("Configuration of your Friends and Family numbers", selenium.getTitle());
            selenium.type("friendsAndFamilyListInputFieldsphone_number0", "1856000000");
            selenium.click("//input[@value='OK']");
            waiting.forEndOfWatingPage();

            bugId = "CBS00125483";
            assertEquals("Confirmation of your Friends and Family numbers modifications", selenium.getTitle());
            bugId = "NoBug";

            assertTrue(selenium.isTextPresent("1856000000"));
            selenium.click("//input[@value='OK']");
            waiting.forEndOfWatingPage();
            waiting.forEndOfWatingPage();
            assertEquals("Subscriber details", selenium.getTitle());

            result = "pass";
        } catch (AlreadyRunException e) {
        } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }
}
