package com.comverse.css.pos.usm;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;

public class USM0050_Display_home_page_for_a_dealer extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testUSM0050_Display_home_page_for_a_dealer() throws Exception {
        try {
            Prep posApplication = new Prep(selenium);
            User myUser = new User(selenium);

            app = posApplication.launchPOS();
            version = posApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = posApplication.getBrowserAgent();

            myUser.loginTelcoAdmin();
            assertEquals("Welcome to Your Workspace", selenium.getTitle());
            assertTrue(selenium.isTextPresent("Sessions expire after a period of 30 min. of inactivity. Once your session expires, you have to login again."));
            myUser.logout();

            myUser.loginTelcoUser();
            assertEquals("Welcome to Your Workspace", selenium.getTitle());
            assertTrue(selenium.isTextPresent("Sessions expire after a period of 30 min. of inactivity. Once your session expires, you have to login again."));
            myUser.logout();

            result = "pass";
        } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {
        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);
        super.tearDown();
    }

}