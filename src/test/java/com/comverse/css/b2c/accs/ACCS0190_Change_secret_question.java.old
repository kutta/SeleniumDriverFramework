package com.comverse.css.b2c.accs;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;

public class ACCS0190_Change_secret_question extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void testACCS0190_Change_secret_question() throws Exception {
        try {
            Prep b2cApplication = new Prep(selenium);
            Wait waiting = new Wait(selenium);
            User myUser = new User(selenium);

            String MemberName = "ACCS0190" + b2cApplication.generateTimeStamp();

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();

            myUser.loginSeniorAcctManager();

            myUser.createSubscriberMember(MemberName);
            myUser.logout();

            String changedpassword = myUser.loginB2CUserWithPasswordChange(MemberName, myUser.setDefaultPassword());

            selenium.click("mnu_INFO");
            waiting.forPageToLoad();
            selenium.click("smnu_SECRET_QUESTION");
            waiting.forPageToLoad();
            selenium.select("secretQuestionId", "label=When did you kiss for the first time?");
            selenium.type("secretAnswer", "16");
            selenium.type("password_old", changedpassword);
            selenium.click("//input[@value='change secret answer']");
            waiting.forTextPresent("Confirm new secret answer");
            assertTrue(selenium.isTextPresent("Secret question: When did you kiss for the first time?"));
            assertTrue(selenium.isTextPresent("Secret answer: 16"));
            selenium.click("//input[@value='OK']");
            waiting.forTextPresent("Your secret answer changed.");
            assertTrue(selenium.isTextPresent("Confirm change"));
            selenium.click("//input[@value='OK']");
            waiting.forPageToLoad();
            myUser.logout();

            // selenium.type("login", MemberName);
            // selenium.click("lnk_FORGOTTEN_PASSWORD");
            selenium.type("login", MemberName);
            selenium.click("lnk_FORGOTTEN_PASSWORD");
            waiting.forTextPresent("Please enter your secret answer and a new temporary password.");
            selenium.type("password_new", "0123456$b");
            selenium.type("password_verify", "0123456$b");
            selenium.type("secretAnswer", "16");
            assertTrue(selenium.isTextPresent("When did you kiss for the first time?"));
            selenium.click("//input[@value='OK']");

            waiting.forTextPresent("New password set properly.");

            myUser.loginB2CUser(MemberName, "0123456$b");

        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
