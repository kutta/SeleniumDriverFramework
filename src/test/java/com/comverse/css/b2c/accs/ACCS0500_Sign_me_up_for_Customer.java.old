package com.comverse.css.b2c.accs;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;
import com.comverse.css.pos.Nca;

public class ACCS0500_Sign_me_up_for_Customer extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void testACCS0500_Sign_me_up_for_Customer() throws Exception {
        try {
            Prep posApplication = new Prep(selenium);
            User myUser = new User(selenium);
            Nca doNca = new Nca(selenium);
            Prep b2cApplication = new Prep(selenium);
            Wait waiting = new Wait(selenium);

            long userName = posApplication.generateTimeStamp();
            String defaultPassword = "0123456";


            // Do NCA in POS to create account not signed up for Selfservice
            app = "myshapeb2c";
            posApplication.launchPOS();
            version = posApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = posApplication.getBrowserAgent();

            myUser.loginTelcoAdmin();
            doNca.checkForExistingBasketAndDiscard();
            doNca.startNCA("New Convergent Residential Customer");
            doNca.enterIdentificationData(userName);
            doNca.modifyAccountDetails();
            doNca.reviewCustomerData();
            doNca.chooseOffer("Residential - Ultra Postpaid");
            doNca.selectHandSet("");
            doNca.enterSubscriptionDetails(userName);
            doNca.selectOffersForYourSubscriber();
            doNca.configureOffers();
            doNca.configureBalance("GPRS WAP-INTERNET_limit", "1024");
            doNca.selectThreeInventory();

            doNca.checkMyBasketContent("Residential - Ultra Postpaid");

            doNca.checkoutReview();
            doNca.checkoutConfirmation("myshapepos");
            String accountNumber = doNca.waitForAccountCreated(userName);





            // Test we can now sign up the account created in POS

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();


            selenium.click("lnk_SIGNUP");

            waiting.forTextPresent("Enter your customer number and your last name or your company name");

            selenium.type("customer_reference", accountNumber);
            selenium.type("customer_last_name", "AcctLN" + userName );
            selenium.click("last_name_radio");
            selenium.click("//input[@value='Continue']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("To finish the Sign Up process, you need to fill a few information.");
            selenium.type("titleString", userName + "");
            selenium.type("first_name", "ACCS0500fn");
            selenium.type("last_name", "ACCS0500ln");


            selenium.type("//fieldset[2]/p[1]/input", "l" + userName);
            selenium.type("//fieldset[2]/p[2]/input", defaultPassword);
            selenium.type("confirm_password", defaultPassword);
            selenium.select("secret_question", "label=When did you kiss for the first time?");
            selenium.type("secret_answer", "16");
            selenium.click("//input[@value='Sign Me Up']");

            waiting.forTextPresent("The \"Sign Me Up\" has been submitted successfully.");

            selenium.click("//input[@value='OK']");

            myUser.loginB2CUser("l" + userName, defaultPassword);

      


            result = "pass";
        } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }
    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
