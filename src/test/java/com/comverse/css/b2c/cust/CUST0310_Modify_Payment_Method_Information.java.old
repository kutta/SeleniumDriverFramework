package com.comverse.css.b2c.cust;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Navigation;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.PropertyHelper;
import com.comverse.css.common.User;
import com.comverse.css.common.Wait;

public class CUST0310_Modify_Payment_Method_Information extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void test() throws Exception {
        try {
            Prep b2cApplication = new Prep(selenium);
            Wait waiting = new Wait(selenium);
            User myUser = new User(selenium);
            Navigation Navigate = new Navigation(selenium);
            PropertyHelper propsHelper = new PropertyHelper();

            long unique_ID = b2cApplication.generateTimeStamp();
            String uniqueString = unique_ID + "";

            String UserName = propsHelper.readLoginFromFile();
            String Password = propsHelper.readPasswordFromFile();

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();

            myUser.loginB2CUser(UserName, Password);

            Navigate.gotoBillingAccountInformation();

            String newBankCode = uniqueString.substring(5, 13) + ""; // 9 Char max
            String newAgencyCode = uniqueString.substring(9, 13) + ""; // 5 Char max
            String newAccountCode = uniqueString; // 14 Char max

            selenium.click("youcan_ON_MODIFY_PAYMENT");
            waiting.forTextPresent("Modify Payment Information");
            waiting.forTextPresent("Payment Method");
            selenium.click("method");
            selenium.type("p-L1:1-L3:1360", newBankCode);
            selenium.type("p-L1:1-L3:1370", newAgencyCode);
            selenium.type("p-L1:1-L3:1380", newAccountCode);
            selenium.click("//input[@value='Modify Payment Method']");
            waiting.forTextPresent("Request Submission");
            assertTrue(selenium.isTextPresent("The \"Modify Payment Information\" request has been submitted successfully."));
            selenium.click("//input[@value='OK']");
            waiting.forPageToLoad();

            Navigate.gotoBillingAccountInformation();
            waiting.forTextPresent("Billing Account Information");
            for (int iteration = 0;; iteration++) {
                Thread.sleep(3000);
                System.out.println("retrying : Checking that paymend has been updated [" + iteration + "/5]");
                if (iteration >= 5) {
                    System.out.println("No update found");
                    break;
                }

                try {
                    if (!selenium.isTextPresent(newBankCode)) {

                        System.out.println("Update not found yet");

                        Navigate.gotoBillingAccountInformation();

                    } else {
                        break;
                    }

                result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
                }

            }

            assertTrue(selenium.isTextPresent("Payment Method:"));
            assertTrue(selenium.isTextPresent(newBankCode));
            assertTrue(selenium.isTextPresent(newAgencyCode));
            assertTrue(selenium.isTextPresent(newAccountCode));

        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
