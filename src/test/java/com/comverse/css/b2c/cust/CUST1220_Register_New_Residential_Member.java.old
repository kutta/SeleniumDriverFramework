package com.comverse.css.b2c.cust;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.PropertyHelper;
import com.comverse.css.common.User;

public class CUST1220_Register_New_Residential_Member extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void testCUST1220_Register_New_Residential_Member() throws Exception {

        try {
            Prep b2cApplication = new Prep(selenium);            
            User myUser = new User(selenium);
            PropertyHelper propsHelper = new PropertyHelper();
            

            long unique_ID = b2cApplication.generateTimeStamp();
            String CustomerName = "$" + unique_ID;
            String MemberPassword;

            String login = propsHelper.readLoginFromFile();
            String password = propsHelper.readPasswordFromFile();


            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();


            myUser.loginB2CUser(login, password);

            MemberPassword = myUser.createNewCustomerResidentialMember("Emp" + CustomerName);
            myUser.logout();

            myUser.loginB2CUserWithPasswordChange("Emp" + CustomerName, MemberPassword);

            assertTrue(selenium.isTextPresent("fnEmp" + CustomerName));
            assertTrue(selenium.isTextPresent("lnEmp" + CustomerName));




        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
