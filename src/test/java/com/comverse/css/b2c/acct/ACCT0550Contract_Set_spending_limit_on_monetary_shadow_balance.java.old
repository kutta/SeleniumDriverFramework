package com.comverse.css.b2c.acct;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Nca;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.Wait;

public class ACCT0550Contract_Set_spending_limit_on_monetary_shadow_balance extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void testACCT0550Contract_Set_spending_limit_on_monetary_shadow_balance() throws Exception {
        try {
            Prep b2cApplication = new Prep(selenium);
            Nca doB2CNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);

            String Username = "" + b2cApplication.generateTimeStamp();

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();
            doB2CNca.startAnonymousShopping();
            doB2CNca.enterCustomerPrerequisites();
            doB2CNca.checkShoppingPageDisplayed();
            doB2CNca.selectFamilyPackCategory();
            doB2CNca.selectOfferBundleByName("Residential - Basic Prepaid Bundle");
            selenium.waitForPageToLoad("30000");
            selenium.click("//input[@value='OK']");
            selenium.waitForPageToLoad("30000");
            doB2CNca.selectOffersForYourAccount();
            doB2CNca.enterSubscriptionDetails(Username);
            doB2CNca.selectOffersForYourSubscriber();
            doB2CNca.configureOffers("Residential - Basic Prepaid Bundle");
            doB2CNca.configureBalance("Residential - Basic Prepaid Bundle");
            doB2CNca.chooseAccessories();

            doB2CNca.myBasketCheckout();
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("DIY - Super-Pack"));
            selenium.click("//input[@value='Accept']");
            selenium.waitForPageToLoad("30000");
            doB2CNca.checkoutRegisterSignMeUp();
            doB2CNca.enterDetailsForSignUpUser(Username);
            doB2CNca.confirmCustomerDetails();
            doB2CNca.checkOutBillingAccountInformationWithCheck();
            doB2CNca.checkoutReview();
            doB2CNca.checkoutConfirmation(app);
            doB2CNca.waitForB2cCustomerBillingAccountCreated();

            selenium.click("smnu_MANAGE_CONTRACTS");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("Subscriber detail "));
            selenium.click("//a[@id='youcan_VIEW_BALANCE_AND_RECHARGE']");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("View Balance"));

            selenium.click("//a[@id='configure_balance_" + doB2CNca.selectConfigureBalance("Voice Night/Weekend Shared") + "']");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("Configure Balance"));
            assertTrue(selenium.isTextPresent("Voice Night/Weekend Shared"));
            assertTrue(selenium.isTextPresent("50 SECONDS"));
            assertTrue(selenium.isTextPresent("Authorize more units for this period"));
            assertTrue(selenium.isTextPresent("Reconfigure balance"));

            selenium.type("//input[@id='configuredLimit']", "75");
            selenium.click("//input[@name='submit_reconfigure_limit']");
            selenium.waitForPageToLoad("30000");
            waiting.forTextPresent("Balance configured");
            assertTrue(selenium.isTextPresent("The \"Configure Balance\" request has been submitted successfully."));
            selenium.click("//input[@value='OK']");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("View Balance"));
            assertTrue(selenium.isTextPresent("Voice Night/Weekend Shared"));
            assertTrue(selenium.isTextPresent("75 SECONDS"));

        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}