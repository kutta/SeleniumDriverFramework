package com.comverse.css.b2c.acct;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Nca;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.Wait;

public class ACCT0421_Modify_Service extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {

        String htmlFileName = this.getClass().getSimpleName().toString();

        super.setUp(htmlFileName);

    }

    public void testACCT0421_Modify_Service() throws Exception {
        try {
            Prep b2cApplication = new Prep(selenium);
            Nca doB2CNca = new Nca(selenium);
            Wait waiting = new Wait(selenium);

            String Username = "" + b2cApplication.generateTimeStamp();


            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();
            doB2CNca.startAnonymousShopping();
            doB2CNca.enterCustomerPrerequisites();
            doB2CNca.checkShoppingPageDisplayed();
            doB2CNca.selectGSMMobileCategory();
            doB2CNca.selectOfferByName("Residential - Ultra Postpaid");
            doB2CNca.chooseDevice();
            doB2CNca.enterSubscriptionDetails(Username);
            doB2CNca.selectOffersForYourSubscriber("2010 Super Bowl News");
            doB2CNca.configureOffers("Residential - Ultra Postpaid");
            doB2CNca.configureBalance("Residential - Ultra Postpaid");
            doB2CNca.chooseAccessories();

            doB2CNca.myBasketCheckout();
            doB2CNca.checkoutRegisterSignMeUp();
            doB2CNca.enterDetailsForSignUpUser(Username);
            doB2CNca.confirmCustomerDetails();
            doB2CNca.checkOutBillingAccountInformationWithCheck();
            doB2CNca.confirmBillingManagement();
            doB2CNca.checkoutReview();
            doB2CNca.checkoutConfirmation(app);
            doB2CNca.waitForB2cCustomerBillingAccountCreated();


            selenium.click("smnu_MANAGE_CONTRACTS");

            waiting.forTextPresent("Subscriber detail");

            String[] links = selenium.getAllLinks();
            String linkID = null;
            for (String localLinkID : links) {

                if (localLinkID.matches("lnk_SERVICE_[0-9]*_MODIFY")) {
                    selenium.click(localLinkID);
                    linkID = localLinkID;
                    break;
                }

            }

            waiting.forTextPresent("Modify Offer Parameters");

            selenium.type("css=form[id=form_MODIFY_SERVICE] input[type=text]", "5");

            selenium.click("css=form[id=form_MODIFY_SERVICE] input[value=Modify]");


            waiting.forTextPresent("Modify Item of Subscriber");

            assertTrue(selenium.isTextPresent("Voice Mail Size: 5"));
            //assertTrue(selenium.isTextPresent("Voice Mail Enable: Yes"));


            selenium.click("css=input[value=Confirm]");

            waiting.forTextPresent("Modify Item");


            assertEquals(selenium.getTitle(), "Modify Item");
            assertTrue(selenium.isTextPresent("The \"Modify supplementary offers\" request has been submitted successfully."));

            selenium.click("css=input[value=OK]");

            waiting.forTextPresent("Subscriber detail");

            int counter = 0;

            while (counter < 10) {

                if (selenium.isElementPresent(linkID)) {

                    selenium.click(linkID);
                    break;
                } else {

                    Thread.sleep(3000);
                    selenium.click("smnu_MANAGE_CONTRACTS");
                    counter++;
                    System.out.println("Check for link [" + linkID + "] - iteration " + counter + " of 10");

                }
                waiting.forTextPresent("Subscriber detail");
            }

            waiting.forTextPresent("Modify Offer Parameters");

            assertEquals(selenium.getValue("css=form[id=form_MODIFY_SERVICE] input[type=text]"), "5");



            result = "pass";
        } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();




        super.logResults(bugId, app, version, testId, result, deployMode, browser);





        super.tearDown();


    }
}
