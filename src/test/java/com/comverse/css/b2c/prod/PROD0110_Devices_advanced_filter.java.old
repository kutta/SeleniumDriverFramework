package com.comverse.css.b2c.prod;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Nca;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.Wait;

public class PROD0110_Devices_advanced_filter extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPROD0110_Devices_advanced_filter() throws Exception {

        try {
            Prep b2cApplication = new Prep(selenium);
            Nca doB2CNca = new Nca(selenium);
            Wait Wait = new Wait(selenium);

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();
            doB2CNca.startAnonymousShopping();
            doB2CNca.enterCustomerPrerequisites();
            doB2CNca.checkShoppingPageDisplayed();
            doB2CNca.selectDataDevicesCategory();
            //doB2CNca.selectOfferByName("CSS_PQA_VoiceDevice_StandardPhones-DEV1");
            selenium.click("lnk_ADVANCE_FILTER");
            Wait.forTextPresent("Simple Filter");
            assertTrue(selenium.isTextPresent("Select Manufacturer"));
            assertTrue(selenium.isTextPresent("Select Features"));
            assertTrue(selenium.isTextPresent("Select Values"));
            assertTrue(selenium.isTextPresent("Search Attributes"));
            //selenium.select("//form[@id='form_FILTER2']/div/div/div", "label=Manufacturer 3");
            selenium.check("manufacturer");
            selenium.click("submit");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV3"));
            System.out.println("assertTrue ok");

            selenium.uncheck("manufacturer");
            selenium.click("submit");
            selenium.waitForPageToLoad("30000");
            selenium.type("searchString", "dev4");
            selenium.click("submit");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV4"));

            selenium.click("lnk_SIMPLE_SELECT");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("CSS-PQA-DataDevice-SmartPhones-DEV4"));
            assertFalse(selenium.isTextPresent("Search Attributes"));

        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}