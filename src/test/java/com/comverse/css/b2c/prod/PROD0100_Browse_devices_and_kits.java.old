package com.comverse.css.b2c.prod;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Nca;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.Wait;


public class PROD0100_Browse_devices_and_kits extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = ""; private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPROD0100_Browse_devices_and_kits() throws Exception {

        try {
            Prep b2cApplication = new Prep(selenium);
            Nca doB2CNca = new Nca(selenium);
            Wait Wait = new Wait(selenium);

         

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();
            doB2CNca.startAnonymousShopping();
            doB2CNca.enterCustomerPrerequisites();
            doB2CNca.checkShoppingPageDisplayed();
            doB2CNca.selectVoiceDevicesCategory();
            doB2CNca.viewDetailOffer("CSS-PQA-VoiceDevice-StandardPhones-DEV1");
            Wait.forTextPresent("Handset Details");


            selenium.click("buy_outright");
            //selenium.click("//form[@id='select_handset']/input");
            //Wait.forTextPresent("Choose Your Primary Offer");
            //selenium.click("//form[@id='nothanks']/input");
            Wait.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV1"));
            assertTrue(selenium.isTextPresent("29.99"));
            selenium.click("continueShopping");
            Wait.forTextPresent("Shopping");
            doB2CNca.selectVoiceAccessoriesCategory();
            selenium.type("qtyByAcc" + doB2CNca.selectAccessory("CSS-PQA-Headset-Voice-ACC5") + "_" + doB2CNca.selectAccessory2("CSS-PQA-Headset-Voice-ACC5"), "2");
            selenium.click("doSubmit");
            Wait.forTextPresent("My Basket");
            assertTrue(selenium.isTextPresent("CSS-PQA-VoiceDevice-StandardPhones-DEV1"));
            assertTrue(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC5"));
            bugId = "CBS00105315";
            assertTrue(selenium.isTextPresent("259.98"));
            bugId = "NoBug";
            assertTrue(selenium.isTextPresent("289.97"));

            selenium.click("checkout");
            Wait.forTextPresent("Terms and Conditions");
            assertTrue(selenium.isTextPresent("CSS_PQA Terms And Conditions"));
            selenium.click("//form[@id='form_OK']/input");
            Wait.forTextPresent("Checkout Register");


        result = "pass"; } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }


    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
