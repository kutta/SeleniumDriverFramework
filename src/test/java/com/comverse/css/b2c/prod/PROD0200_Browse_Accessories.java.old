package com.comverse.css.b2c.prod;

import org.junit.After;
import org.junit.Before;

import com.comverse.css.b2c.Nca;
import com.comverse.css.common.CSSSeleneseTestCase; import com.comverse.css.common.AlreadyRunException;
import com.comverse.css.common.Prep;
import com.comverse.css.common.Wait;

public class PROD0200_Browse_Accessories extends CSSSeleneseTestCase {

    private StringBuffer broken_error = new StringBuffer();
    private String bugId = "NoBug";
    private String app = "";
    private String version = "";
    private String deployMode = "CV";
    private String browser = "";
    private String result = "fail";

    @Before
    @Override
    public void setUp() {
        String htmlFileName = this.getClass().getSimpleName().toString();
        super.setUp(htmlFileName);
    }

    public void testPROD0200_Browse_Accessories() throws Exception {

        try {
            Prep b2cApplication = new Prep(selenium);
            Nca doB2CNca = new Nca(selenium);
            Wait Wait = new Wait(selenium);

            app = b2cApplication.launchB2C();
            version = b2cApplication.getBuildNumber(app, this.getClass().getSimpleName().toString());
            browser = b2cApplication.getBrowserAgent();
            doB2CNca.startAnonymousShopping();
            doB2CNca.enterCustomerPrerequisites();
            doB2CNca.checkShoppingPageDisplayed();
            doB2CNca.selectVoiceAccessoriesCategory();
            selenium.select("manufacturerId", "label=Manufacturer 1");
            selenium.click("doFilter");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC5"));
            selenium.select("manufacturerId", "label=All Manufacturers");
            selenium.click("doFilter");
            selenium.waitForPageToLoad("30000");
            selenium.select("handsetId", "label=CSS-PQA-VoiceDevice-StandardPhones-DEV1");
            selenium.click("doFilter");
            selenium.waitForPageToLoad("30000");
            assertTrue(selenium.isTextPresent("No Accessory"));
            assertTrue(selenium.isTextPresent("There are no accessories corresponding to your choice"));
            selenium.select("handsetId", "label=All Phones");
            selenium.click("doFilter");
            selenium.waitForPageToLoad("30000");
            selenium.click("select_" + doB2CNca.selectAccessory("CSS-PQA-Headset-Voice-ACC6") + "_"
                    + doB2CNca.selectAccessory2("CSS-PQA-Headset-Voice-ACC6"));
            assertTrue(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC6"));
            assertTrue(selenium.isTextPresent("Description of CSS_PQA_Headset_Voice_ACC6"));
            assertTrue(selenium.isTextPresent("Disclaimer of CSS_PQA_Headset_Voice_ACC6"));
            selenium.click("back_to_list");
            selenium.type("qtyByAcc" + doB2CNca.selectAccessory("CSS-PQA-Headset-Voice-ACC6") + "_"
                    + doB2CNca.selectAccessory2("CSS-PQA-Headset-Voice-ACC6"), "2");
            selenium.click("doSubmit");
            Wait.forTextPresent("My Basket");

            assertTrue(selenium.isTextPresent("CSS-PQA-Headset-Voice-ACC6"));
            assertTrue(selenium.isTextPresent("My Basket (2 items)"));

            result = "pass";
        } catch (AlreadyRunException e) {         } catch (Exception e) {
            broken_error.append(e.getMessage());
            throw e;
        }

    }

    @After
    @Override
    public void tearDown() {

        //String result = super.testResult(broken_error);
        String testId = this.getClass().getSimpleName().toString();
        super.logResults(bugId, app, version, testId, result, deployMode, browser);

        super.tearDown();
    }
}
