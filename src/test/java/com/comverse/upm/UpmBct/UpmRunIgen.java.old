package com.comverse.upm.UpmBct;

/**
 * 
 * @author osmolya
 */

import com.comverse.upm.common.*;
import com.comverse.upm.upmPages.ProcessPage;
import com.thoughtworks.selenium.*;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;


public class UpmRunIgen {
	public Selenium selenium;
	
	@Before
	public void setUp() throws Exception {
		UpmPrep UP = new UpmPrep();
		selenium=UP.startSeleniumAndOpenUpmHome(selenium);
	}

	private String templateName = "Auto_IGEN";
	private String moduleName = "IGEN";
	private String nodeType = "billing";
	private String serverId = "CUST1";
	private String taskMode = "regular-batch";
	private Boolean templateExists;
	private String accountNo = "100";
	private String workflowType="CBS Batch Process";
	private int DefaultStateCheckIterations=20;
	
	@Test
	public void call_igen_workflow_with_account_no() throws Exception
	{
		// Stub for calling IGEN batch workflow
		// update account number manually if not calling test_upm_bct_bp_workflow
		// from another script
		test_upm_bct_igen_workflow(accountNo);
	}
	
	
	public Selenium test_upm_bct_igen_workflow(String accountNo) throws Exception {
		
		UpmUtils Utils = new UpmUtils(selenium);
		UpmNavigation Navigate = new UpmNavigation(selenium);
		UpmValidation Validate = new UpmValidation(selenium);
		ProcessPage processPage = new ProcessPage(selenium);
		
		Utils.UpmCheckWhetherLoggedInAndLogIn();

		//Go to Process-> Workflow tab

		Navigate.goToProcessWorkflow();
		processPage.selectTemplateWorkflowType(workflowType);
		//Check whether Auto_JNL template exists; if not create by invoking createJnlTemplate class

		templateExists=Utils.checkTemplate(templateName);
		
		//Proceed to create new template only if it does not already exist
		if (!(templateExists))
		{
			Utils.upm_create_template( templateName,moduleName,nodeType,serverId,taskMode);
		}
		
		//Run template
		Utils.runTemplate( templateName,accountNo);
		
		//Go to History tab and click Refresh until last created workflow is Completed
		Validate.validateLastWorkflowCompleted(DefaultStateCheckIterations);
	    return selenium;
	}	
	
	@After
	public void tearDown() throws Exception {
		selenium.stop();
	}
}


